// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/protobolt/internal/types/types.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// KeyType defines the behavior of a document key.
type KeyType int32

const (
	// Shared keys may reference multiple documents contemporaneously.
	KeyType_SHARED KeyType = 0
	// Unique keys always refer to a single document. Attempting to persist a
	// document with a unique key that is already held by another document
	// results in a DuplicateKeyError.
	KeyType_UNIQUE KeyType = 1
)

var KeyType_name = map[int32]string{
	0: "SHARED",
	1: "UNIQUE",
}
var KeyType_value = map[string]int32{
	"SHARED": 0,
	"UNIQUE": 1,
}

func (x KeyType) String() string {
	return proto.EnumName(KeyType_name, int32(x))
}
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_154c9533d9692ad2, []int{0}
}

// MetaData contains meta-data about a document.
type MetaData struct {
	// id is the document's unique ID. It can be any non-empty string.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// version is the version of the document as represented by this value.
	// When saving a document, it must be equal to the version of the document
	// that is currently persisted, otherwise an OptimisticLockError occurs.
	Version uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// keys is the set of indexing keys applied to the document. keys are used
	// to quickly find a document or set of documents based on identifieres
	// other than the document ID.
	Keys map[string]KeyType `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=protobolt.KeyType"`
	// headers is an arbitrary set of key/value pairs that is persisted along
	// with the document content.
	Headers map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// created_at is the time at which the document was created. The value is
	// set automatically when the document is saved.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// updated_at is the time at which the document was last modified. The value
	// is set automatically when the document is saved.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetaData) Reset()         { *m = MetaData{} }
func (m *MetaData) String() string { return proto.CompactTextString(m) }
func (*MetaData) ProtoMessage()    {}
func (*MetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_154c9533d9692ad2, []int{0}
}
func (m *MetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaData.Unmarshal(m, b)
}
func (m *MetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaData.Marshal(b, m, deterministic)
}
func (dst *MetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaData.Merge(dst, src)
}
func (m *MetaData) XXX_Size() int {
	return xxx_messageInfo_MetaData.Size(m)
}
func (m *MetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaData.DiscardUnknown(m)
}

var xxx_messageInfo_MetaData proto.InternalMessageInfo

func (m *MetaData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetaData) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *MetaData) GetKeys() map[string]KeyType {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *MetaData) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *MetaData) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *MetaData) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// ContentEnvelope is a container for persisted content. It is present to allow
// the use of the Any type.
type ContentEnvelope struct {
	Content              *any.Any `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContentEnvelope) Reset()         { *m = ContentEnvelope{} }
func (m *ContentEnvelope) String() string { return proto.CompactTextString(m) }
func (*ContentEnvelope) ProtoMessage()    {}
func (*ContentEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_154c9533d9692ad2, []int{1}
}
func (m *ContentEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentEnvelope.Unmarshal(m, b)
}
func (m *ContentEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentEnvelope.Marshal(b, m, deterministic)
}
func (dst *ContentEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentEnvelope.Merge(dst, src)
}
func (m *ContentEnvelope) XXX_Size() int {
	return xxx_messageInfo_ContentEnvelope.Size(m)
}
func (m *ContentEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_ContentEnvelope proto.InternalMessageInfo

func (m *ContentEnvelope) GetContent() *any.Any {
	if m != nil {
		return m.Content
	}
	return nil
}

// KeyData represents a key within the database.
type KeyData struct {
	Type                 KeyType         `protobuf:"varint,1,opt,name=type,proto3,enum=protobolt.KeyType" json:"type,omitempty"`
	Documents            map[string]bool `protobuf:"bytes,2,rep,name=documents,proto3" json:"documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KeyData) Reset()         { *m = KeyData{} }
func (m *KeyData) String() string { return proto.CompactTextString(m) }
func (*KeyData) ProtoMessage()    {}
func (*KeyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_154c9533d9692ad2, []int{2}
}
func (m *KeyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyData.Unmarshal(m, b)
}
func (m *KeyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyData.Marshal(b, m, deterministic)
}
func (dst *KeyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyData.Merge(dst, src)
}
func (m *KeyData) XXX_Size() int {
	return xxx_messageInfo_KeyData.Size(m)
}
func (m *KeyData) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyData.DiscardUnknown(m)
}

var xxx_messageInfo_KeyData proto.InternalMessageInfo

func (m *KeyData) GetType() KeyType {
	if m != nil {
		return m.Type
	}
	return KeyType_SHARED
}

func (m *KeyData) GetDocuments() map[string]bool {
	if m != nil {
		return m.Documents
	}
	return nil
}

func init() {
	proto.RegisterType((*MetaData)(nil), "protobolt.MetaData")
	proto.RegisterMapType((map[string]string)(nil), "protobolt.MetaData.HeadersEntry")
	proto.RegisterMapType((map[string]KeyType)(nil), "protobolt.MetaData.KeysEntry")
	proto.RegisterType((*ContentEnvelope)(nil), "protobolt.ContentEnvelope")
	proto.RegisterType((*KeyData)(nil), "protobolt.KeyData")
	proto.RegisterMapType((map[string]bool)(nil), "protobolt.KeyData.DocumentsEntry")
	proto.RegisterEnum("protobolt.KeyType", KeyType_name, KeyType_value)
}

func init() {
	proto.RegisterFile("src/protobolt/internal/types/types.proto", fileDescriptor_types_154c9533d9692ad2)
}

var fileDescriptor_types_154c9533d9692ad2 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0x87, 0x4d, 0xfa, 0x27, 0x9b, 0x53, 0xa9, 0x65, 0xd8, 0x8b, 0x18, 0x10, 0xb3, 0xbd, 0x90,
	0xe0, 0x45, 0x8a, 0xf5, 0x46, 0x8b, 0x20, 0xd1, 0x16, 0x56, 0x8a, 0x82, 0x71, 0xf7, 0xc6, 0x1b,
	0x99, 0x6d, 0x8e, 0x6b, 0xd8, 0x74, 0x26, 0x24, 0xa7, 0x85, 0x79, 0x1d, 0x9f, 0xc0, 0x47, 0x94,
	0xcc, 0x24, 0x35, 0xeb, 0x16, 0x7a, 0x53, 0xa6, 0x39, 0xdf, 0x77, 0x38, 0xbf, 0x39, 0x09, 0x84,
	0x55, 0xb9, 0x99, 0x15, 0xa5, 0x24, 0x79, 0x23, 0x73, 0x9a, 0x65, 0x82, 0xb0, 0x14, 0x3c, 0x9f,
	0x91, 0x2a, 0xb0, 0x32, 0xbf, 0x91, 0x2e, 0x33, 0xf7, 0x40, 0xf9, 0x4f, 0x6f, 0xa5, 0xbc, 0xcd,
	0xb1, 0xf1, 0x76, 0x3f, 0x67, 0x5c, 0x28, 0x43, 0xf9, 0xcf, 0xff, 0x2f, 0x51, 0xb6, 0xc5, 0x8a,
	0xf8, 0xb6, 0x30, 0xc0, 0xf4, 0x77, 0x0f, 0xce, 0x3e, 0x23, 0xf1, 0x25, 0x27, 0xce, 0xc6, 0x60,
	0x67, 0xa9, 0x67, 0x05, 0x56, 0xe8, 0x26, 0x76, 0x96, 0x32, 0x0f, 0x9c, 0x3d, 0x96, 0x55, 0x26,
	0x85, 0x67, 0x07, 0x56, 0xd8, 0x4f, 0xda, 0xbf, 0xec, 0x15, 0xf4, 0xef, 0x50, 0x55, 0x5e, 0x2f,
	0xe8, 0x85, 0xa3, 0xf9, 0xb3, 0xe8, 0x30, 0x4c, 0xd4, 0x36, 0x8b, 0xd6, 0xa8, 0xaa, 0x95, 0xa0,
	0x52, 0x25, 0x1a, 0x65, 0x0b, 0x70, 0x7e, 0x21, 0x4f, 0xb1, 0xac, 0xbc, 0xbe, 0xb6, 0x82, 0x63,
	0xd6, 0xa5, 0x41, 0x8c, 0xd8, 0x0a, 0xec, 0x2d, 0xc0, 0xa6, 0x44, 0x4e, 0x98, 0xfe, 0xe0, 0xe4,
	0x0d, 0x02, 0x2b, 0x1c, 0xcd, 0xfd, 0xc8, 0x64, 0x8b, 0xda, 0x6c, 0xd1, 0x55, 0x9b, 0x2d, 0x71,
	0x1b, 0x3a, 0xa6, 0x5a, 0xdd, 0x15, 0x69, 0xab, 0x0e, 0x4f, 0xab, 0x0d, 0x1d, 0x93, 0xbf, 0x06,
	0xf7, 0x10, 0x82, 0x4d, 0xa0, 0x77, 0x87, 0xaa, 0xb9, 0x9c, 0xfa, 0xc8, 0x42, 0x18, 0xec, 0x79,
	0xbe, 0x43, 0x7d, 0x37, 0xe3, 0x39, 0xeb, 0xc4, 0x59, 0xa3, 0xba, 0x52, 0x05, 0x26, 0x06, 0x58,
	0xd8, 0x6f, 0x2c, 0x7f, 0x01, 0x8f, 0xbb, 0xd9, 0x8e, 0xf4, 0x3b, 0xef, 0xf6, 0x73, 0x3b, 0xee,
	0x34, 0x86, 0x27, 0x1f, 0xa5, 0x20, 0x14, 0xb4, 0x12, 0x7b, 0xcc, 0x65, 0x81, 0x2c, 0x02, 0x67,
	0x63, 0x1e, 0xe9, 0x16, 0xa3, 0xf9, 0xf9, 0x83, 0x4c, 0xb1, 0x50, 0x49, 0x0b, 0x4d, 0xff, 0x58,
	0xe0, 0xac, 0x51, 0xe9, 0x35, 0xbf, 0x80, 0x7e, 0xfd, 0x26, 0x69, 0xf1, 0xf8, 0xdc, 0xba, 0xce,
	0xde, 0x83, 0x9b, 0xca, 0xcd, 0x6e, 0x8b, 0x82, 0x2a, 0xcf, 0xd6, 0x3b, 0xbb, 0xb8, 0x0f, 0xeb,
	0x95, 0x2d, 0x5b, 0xc6, 0x2c, 0xed, 0x9f, 0xe3, 0xbf, 0x83, 0xf1, 0xfd, 0xe2, 0xa9, 0xd4, 0x67,
	0x9d, 0xd4, 0x2f, 0x2f, 0xf4, 0xc4, 0xf5, 0x3c, 0x0c, 0x60, 0xf8, 0xed, 0x32, 0x4e, 0x56, 0xcb,
	0xc9, 0xa3, 0xfa, 0x7c, 0xfd, 0xe5, 0xd3, 0xd7, 0xeb, 0xd5, 0xc4, 0xfa, 0xe0, 0x7c, 0x1f, 0xe8,
	0x6f, 0xe2, 0x66, 0xa8, 0xc7, 0x7a, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x69, 0xdc, 0x60, 0x8e,
	0x40, 0x03, 0x00, 0x00,
}
